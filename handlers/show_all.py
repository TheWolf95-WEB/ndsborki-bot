# handlers/show_all.py

import os
import json
from telegram import Update
from telegram.ext import CommandHandler, ContextTypes

# –ü—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞ —Å–±–æ—Ä–æ–∫
ROOT    = os.path.dirname(os.path.dirname(__file__))
DB_PATH = os.path.join(ROOT, "database", "builds.json")

# –≠–º–æ–¥–∑–∏
E_GIFT     = "üì¶"
E_WEAPON   = "üî´"
E_TYPE     = "‚öôÔ∏è"
E_CATEGORY = "üìÅ"
E_MODULES  = "üî©"
E_AUTHOR   = "üë§"

async def show_all(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # 1) –ó–∞–≥—Ä—É–∑–∫–∞ –ë–î
    try:
        with open(DB_PATH, encoding="utf-8") as f:
            builds = json.load(f)
    except Exception as e:
        return await update.message.reply_text(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å builds.json: {e}")

    if not builds:
        return await update.message.reply_text("‚ÑπÔ∏è –í –±–∞–∑–µ –µ—â—ë –Ω–µ—Ç —Å–±–æ—Ä–æ–∫.")

    # 2) –ó–∞–≥–æ–ª–æ–≤–æ–∫
    await update.message.reply_text(f"{E_GIFT} <b>–í—Å–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Å–±–æ—Ä–∫–∏:</b>\n", parse_mode="HTML")

    # 3) –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –ø–∞—Ä—ã –ø–æ –¥–≤–µ —Å–±–æ—Ä–∫–∏
    pairs = [builds[i:i+2] for i in range(0, len(builds), 2)]

    for pair in pairs:
        parts = []
        for b in pair:
            # –°–æ–±–∏—Ä–∞–µ–º HTML –±–ª–æ–∫ –æ–¥–Ω–æ–π —Å–±–æ—Ä–∫–∏
            name = b.get("weapon_name", "‚Äî")
            typ  = b.get("type",        "‚Äî")
            cat  = b.get("category",    "‚Äî")
            cnt  = len(b.get("modules", {}))
            auth = b.get("author",      "‚Äî")

            block = (
                f"{E_WEAPON} <b>{name}</b>\n"
                f"{E_TYPE} –¢–∏–ø: <i>{typ}</i>\n"
                f"{E_CATEGORY} –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <i>{cat}</i>\n"
                f"{E_MODULES} –ú–æ–¥—É–ª–∏: <b>{cnt}</b>\n"
                f"{E_AUTHOR} {auth}"
            )
            parts.append(block)

        # –ï—Å–ª–∏ –ø–∞—Ä–Ω–∞—è ‚Äî –≤—ã–≤–æ–¥–∏–º –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏ —á–µ—Ä–µ–∑ —Ç–∞–±—É–ª—è—Ü–∏—é
        if len(parts) == 2:
            left, right = parts
            # –ø—Ä–æ—Å—Ç–µ–π—à–∞—è —Ä–∞–∑–±–∏–≤–∫–∞: —Å–æ–µ–¥–∏–Ω—è–µ–º –ø–æ —Å—Ç—Ä–æ–∫–∞–º
            left_lines  = left.split("\n")
            right_lines = right.split("\n")
            # —Å–æ–±–µ—Ä—ë–º –º–∞–∫—Å–∏–º—É–º –ø–æ 5 —Å—Ç—Ä–æ–∫
            rows = max(len(left_lines), len(right_lines))
            combined = []
            for i in range(rows):
                L = left_lines[i]  if i < len(left_lines) else ""
                R = right_lines[i] if i < len(right_lines) else ""
                combined.append(f"{L:40}    {R}")
            text = "\n".join(combined)
            await update.message.reply_text(f"<pre>{text}</pre>", parse_mode="HTML")
        else:
            # –¢–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞
            await update.message.reply_text(parts[0], parse_mode="HTML")

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É ¬´—Å—Ç—Ä–æ–∫–∞–º–∏¬ª —Ç–∞–±–ª–∏—Ü—ã
        await update.message.reply_text("‚îÄ" * 40)

show_all_handler = CommandHandler("show_all", show_all)
