import os
import json
from telegram import Update
from telegram.ext import CommandHandler, ContextTypes
from utils.keyboards import get_main_menu

# –ü—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞ —Å –±–∞–∑–æ–π —Å–±–æ—Ä–æ–∫
ROOT = os.path.dirname(os.path.dirname(__file__))
DB_PATH = os.path.join(ROOT, "database", "builds.json")


async def show_all(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å JSON
    try:
        with open(DB_PATH, "r", encoding="utf-8") as f:
            builds = json.load(f)
    except FileNotFoundError:
        await update.message.reply_text("‚ùå –§–∞–π–ª —Å–±–æ—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ —Å–±–æ—Ä–æ–∫: {e}")
        return

    if not builds:
        await update.message.reply_text("‚ÑπÔ∏è –í –±–∞–∑–µ –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π —Å–±–æ—Ä–∫–∏.")
        return

    # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –≤–∏–¥–∞: ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ ‚Äî –ö–∞—Ç–µ–≥–æ—Ä–∏—è / –¢–∏–ø
    lines = ["üì¶ <b>–í—Å–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Å–±–æ—Ä–∫–∏:</b>\n"]
    for b in builds:
        name = b.get("weapon_name", "‚Äî")
        cat  = b.get("category", "‚Äî")
        typ  = b.get("type", "‚Äî")
        lines.append(f"‚Ä¢ <b>{name}</b> ‚Äî {cat} / {typ}")

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤ –æ–¥–∏–Ω —Ç–µ–∫—Å—Ç
    text = "\n".join(lines)
    # –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ä–∞–∑—É
    if len(text) <= 4000:
        await update.message.reply_text(text, parse_mode="HTML")
        return

    # –ò–Ω–∞—á–µ —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞–Ω–∫–∏ –ø–æ ~4000 —Å–∏–º–≤–æ–ª–æ–≤
    chunk = []
    size = 0
    for line in lines:
        if size + len(line) + 1 > 4000:
            await update.message.reply_text("\n".join(chunk), parse_mode="HTML")
            chunk = []
            size = 0
        chunk.append(line)
        size += len(line) + 1
    if chunk:
        await update.message.reply_text("\n".join(chunk), parse_mode="HTML")


show_all_handler = CommandHandler("show_all", show_all)
